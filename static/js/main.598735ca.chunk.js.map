{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","components/ItemList/ItemList.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageNumbers","Math","ceil","handlePageChange","event","preventDefault","target","id","length","isPrevDisabled","isNextDisabled","className","cn","disabled","href","onClick","map","pageNum","active","ItemList","items","firstIndex","lastIndex","slice","item","App","useState","setPerPage","setCurrentPage","startIndex","endIndex","min","value","onChange","htmlFor","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.598735ca.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { FC, MouseEventHandler } from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\nimport { PaginationProps } from '../../types';\n\nexport const Pagination: FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageNumbers = getNumbers(1, Math.ceil(total / perPage));\n\n  const handlePageChange: MouseEventHandler<HTMLAnchorElement> = (event) => {\n    event.preventDefault();\n    const target = event.target as HTMLAnchorElement;\n\n    if (\n      +target.id === +currentPage\n      && target.id !== 'next'\n      && target.id !== 'prev'\n    ) {\n      return;\n    }\n\n    if (\n      (target.id === 'next' && +currentPage === pageNumbers.length)\n      || (target.id === 'prev' && +currentPage === 1)\n    ) {\n      return;\n    }\n\n    onPageChange(target.id);\n  };\n\n  const isPrevDisabled = +currentPage === 1;\n  const isNextDisabled = +currentPage === pageNumbers.length;\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: isPrevDisabled,\n        })}\n      >\n        <a\n          id=\"prev\"\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isPrevDisabled}\n          onClick={handlePageChange}\n        >\n          «\n        </a>\n      </li>\n\n      {\n        pageNumbers.map(pageNum => (\n          <li\n            key={pageNum}\n            className={cn('page-item', {\n              active: +currentPage === pageNum,\n            })}\n          >\n            <a\n              id={`${pageNum}`}\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageNum}`}\n              onClick={handlePageChange}\n            >\n              {pageNum}\n            </a>\n          </li>\n        ))\n      }\n\n      <li\n        className={cn('page-item', {\n          disabled: isNextDisabled,\n        })}\n      >\n        <a\n          id=\"next\"\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isNextDisabled}\n          onClick={handlePageChange}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { FC } from 'react';\nimport { ItemListProps } from '../../types';\n\nexport const ItemList: FC<ItemListProps> = ({\n  items, firstIndex, lastIndex,\n}) => (\n  <ul>\n    {\n      items.slice(firstIndex, lastIndex).map(item => (\n        <li key={item} data-cy=\"item\">\n          {item}\n        </li>\n      ))\n    }\n  </ul>\n);\n","import { ChangeEventHandler, useState, FC } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { ItemList } from './components/ItemList';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handlePerPageSelect: ChangeEventHandler<HTMLSelectElement>\n  = (event) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const onPageChange = (value: string) => {\n    if (value === 'next') {\n      setCurrentPage(prev => prev + 1);\n\n      return;\n    }\n\n    if (value === 'prev') {\n      setCurrentPage(prev => prev - 1);\n\n      return;\n    }\n\n    setCurrentPage(+value);\n  };\n\n  const startIndex = (currentPage - 1) * perPage;\n  const endIndex = Math.min(\n    (startIndex + perPage), items.length,\n  );\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${endIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ItemList\n        items={items}\n        firstIndex={startIndex}\n        lastIndex={endIndex}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}